build:
  version_from_profile: ${build.version}
  default_version: "{cipher}5e0a912c98a022f16a500cf05bbd2d79dee464554b1637ece5ea4ad9ae11e206"
  duplicated_version: "a dup default" # hadi w li lfo9 kamlin ayakhod card machi app
  version_from_profile2: ${build.version2}
  default_version2: "a default"
  duplicated_version2: "a dup default"


server:
  port: 9000
spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/card_db
    username: postgres
    password: cardpw
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
management:
  endpoints:
    web:
      exposure: # This exposes the endpoint over HTTP.
        include: "*" # todo khas n7aded dakchi, matalan gateway,health,info..., w matalan gateway mandirhach hna ndirha f gatewayserver.yml
  # wa9ila enable /actuator/info
  info:
    env:
      enabled: true
# hadi 4i la b4it n arreter chi ms mn endpoint
  endpoint:
    shutdown:
      enabled: true

# todo khas ntesti 7ta b consul
eureka:
  instance:
    # when trying to register with the eureka server, by default it will try to register with the host name(make sense whenever we are trying to use DNS mappings inside microservices network)
    prefer-ip-address: true # because we don't have any DNS mapping set up. when other microservice will try to connect with this service, eureka server is going to share the ip address details of this service
  client:
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/ # todo nraj3ha haka: http://{eureka-host}:{port}/eureka/
# hadi 4i la b4it n arreter chi ms mn endpoint
endpoints:
  shutdown:
    enabled: true
